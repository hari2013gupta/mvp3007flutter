plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.mvp3007"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.mvp3007"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }
    // def keystoreProperties = new Properties()
    // def keystorePropertiesFile = rootProject.file('key.properties')
    // if (keystorePropertiesFile.exists()) {
    //     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    // }
    // signingConfigs {
    //     debug {
    //         storeFile file('../keystores/debug.keystore')
    //         storePassword 'android'
    //         keyAlias 'androiddebugkey'
    //         keyPassword 'android'
    //     }
    //     releasetest {
    //         storeFile file('../keystores/releaseTest-keystore.jks')
    //         storePassword 'releaseTest'
    //         keyAlias 'releasetestkey'
    //         keyPassword 'releaseTest'
    //     }
    //     release {
    //         keyAlias keystoreProperties['keyAlias']
    //         keyPassword keystoreProperties['keyPassword']
    //         storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
    //         storePassword keystoreProperties['storePassword']
    //     }
    // }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        // release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig = signingConfigs.debug
            
        //     signingConfig signingConfigs.release
        //     minifyEnabled true
        //     shrinkResources true
        //     proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        // }
    }
    // -------------flavours-------------
    // flutter run --flavor preprod --release
    // flavorDimensions "default"
    // productFlavors {
    //     free {
    //         dimension "default"
    //         resValue "string", "app_name", "free flavor example"
    //         applicationIdSuffix ".free"
    //     }
    // }
//     flavorDimensions "app"
//     dev {
//         dimension "app"
//         resValue "string", "app_name", "AppName - DEV"
//         applicationIdSuffix ".debug"
//     }
//     staging {
//         dimension "app"
//         resValue "string", "app_name", "AppName - DEV"
//         applicationIdSuffix ".debug"
//     }
//     prod {
//         dimension "app"
//         resValue "string", "app_name", "AppName"
//     }
}

flutter {
    source = "../.."
}
